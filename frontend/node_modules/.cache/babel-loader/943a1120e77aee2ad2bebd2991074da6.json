{"ast":null,"code":"import _slicedToArray from\"G:/Fullstack Course/Final Project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";/* REACT BOOTSTRAP */import{Button,Form,Col}from\"react-bootstrap\";/* COMPONENTS */import FormContainer from\"../components/FormContainer\";import CheckoutSteps from\"../components/CheckoutSteps\";/* REACT - REDUX */import{useDispatch,useSelector}from\"react-redux\";/* ACTION CREATORS */import{savePaymentMethod}from\"../actions/cartActions\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PaymentScreen(_ref){var history=_ref.history;// PULLING OUT SHIPPING ADDRESS FROM CART\nvar cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;// STATE\nvar _useState=useState(\"PayPal\"),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];/* IF NO SHIPPING ADDRESS THEN REDIRECT TO ShippingAddress SCREEN */if(!shippingAddress.address){history.push(\"./shipping\");}// HANDLERS\nvar dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();dispatch(savePaymentMethod(paymentMethod));// AFTER CHOSING THE PAYMENT METHOD REDIRECT USER TO PlaceOrder SCREEN\nhistory.push(\"/placeorder\");};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"paypal\",name:\"paymentMethod\",checked:true})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"my-3\",children:\"Continue\"})]})]});}export default PaymentScreen;","map":{"version":3,"sources":["G:/Fullstack Course/Final Project/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Button","Form","Col","FormContainer","CheckoutSteps","useDispatch","useSelector","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","paymentMethod","setPaymentMethod","address","push","dispatch","submitHandler","e","preventDefault"],"mappings":"iKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,qBACA,OAASC,MAAT,CAAiBC,IAAjB,CAAuBC,GAAvB,KAAkC,iBAAlC,CAEA,gBACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CAEA,mBACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CAEA,qBACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,QAASC,CAAAA,aAAT,MAAoC,IAAXC,CAAAA,OAAW,MAAXA,OAAW,CAClC;AACA,GAAMC,CAAAA,IAAI,CAAGJ,WAAW,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CAEA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CAEA;AACA,cAA0Cb,QAAQ,CAAC,QAAD,CAAlD,wCAAOc,aAAP,eAAsBC,gBAAtB,eAEA,oEACA,GAAI,CAACF,eAAe,CAACG,OAArB,CAA8B,CAC5BN,OAAO,CAACO,IAAR,CAAa,YAAb,EACD,CAED;AAEA,GAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA,GAAMa,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GAEAH,QAAQ,CAACV,iBAAiB,CAACM,aAAD,CAAlB,CAAR,CAEA;AACAJ,OAAO,CAACO,IAAR,CAAa,aAAb,EACD,CAPD,CASA,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEE,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADF,cAEE,KAAC,GAAD,wBACE,KAAC,IAAD,CAAM,KAAN,EACE,IAAI,CAAC,OADP,CAEE,KAAK,CAAC,uBAFR,CAGE,EAAE,CAAC,QAHL,CAIE,IAAI,CAAC,eAJP,CAKE,OAAO,KALT,EADF,EAFF,GADF,cAcE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,CAAwC,SAAS,CAAC,MAAlD,sBAdF,GAHF,GADF,CAwBD,CAED,cAAeV,CAAAA,aAAf","sourcesContent":["import React, { useState } from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Button, Form, Col } from \"react-bootstrap\";\n\n/* COMPONENTS */\nimport FormContainer from \"../components/FormContainer\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { savePaymentMethod } from \"../actions/cartActions\";\n\nfunction PaymentScreen({ history }) {\n  // PULLING OUT SHIPPING ADDRESS FROM CART\n  const cart = useSelector((state) => state.cart);\n\n  const { shippingAddress } = cart;\n\n  // STATE\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\n\n  /* IF NO SHIPPING ADDRESS THEN REDIRECT TO ShippingAddress SCREEN */\n  if (!shippingAddress.address) {\n    history.push(\"./shipping\");\n  }\n\n  // HANDLERS\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    dispatch(savePaymentMethod(paymentMethod));\n\n    // AFTER CHOSING THE PAYMENT METHOD REDIRECT USER TO PlaceOrder SCREEN\n    history.push(\"/placeorder\");\n  };\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as=\"legend\">Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type=\"radio\"\n              label=\"PayPal or Credit Card\"\n              id=\"paypal\"\n              name=\"paymentMethod\"\n              checked\n            ></Form.Check>\n          </Col>\n        </Form.Group>\n\n        <Button type=\"submit\" variant=\"primary\" className=\"my-3\">\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n\nexport default PaymentScreen;\n\n"]},"metadata":{},"sourceType":"module"}
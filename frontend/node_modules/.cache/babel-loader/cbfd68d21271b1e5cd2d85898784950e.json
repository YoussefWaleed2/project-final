{"ast":null,"code":"import _slicedToArray from\"G:/Fullstack Course/Final Project/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";/* REACT BOOTSTRAP */import{Row,Col,Button,Form,Table}from\"react-bootstrap\";/* REACT ROUTER BOOTSTRAP */import{LinkContainer}from\"react-router-bootstrap\";/* COMPONENTS */import Message from\"../components/Message\";import Loader from\"../components/Loader\";/* REACT - REDUX */import{useDispatch,useSelector}from\"react-redux\";/* ACTION CREATORS */import{getUserDetails,updateUserProfile}from\"../actions/userActions\";import{listMyOrders}from\"../actions/orderActions\";/* ACTION TYPES */import{USER_UPDATE_PROFILE_RESET}from\"../constants/userConstants\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ProfileScreen(_ref){var history=_ref.history;/* STATE */var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setpassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();/* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */var userDetails=useSelector(function(state){return state.userDetails;});var user=userDetails.user,loading=userDetails.loading,error=userDetails.error;/* WE NEED TO MAKE SURE USER IS LOGGED IN SO PULLING OUT USER LOGIN INFO */var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;/* PULLING OUT SUCCESS FROM userUpdateProfile, IF SUCCESS IS TRUE WE WILL RESET STATE */var userUpdateProfle=useSelector(function(state){return state.userUpdateProfle;});var success=userUpdateProfle.success;/* PULLING OUT USER ORDER DETAILS TO DISPLAY ON THE PAGE */var orderListMy=useSelector(function(state){return state.orderListMy;});var loadingOrders=orderListMy.loading,errorOrders=orderListMy.error,orders=orderListMy.orders;/* SENDING USER TO LOGIN PAGE IF NOT LOGGED IN & SHOW PROFILE DATA IF LOGGED IN */useEffect(function(){// USER IS NOT LOGGED IN\nif(!userInfo){history.push(\"/login\");}else{// WE DON'T HAVE THE USER INFO SO WE DISPATCH AN ACTION TO GET THE DATA\nif(!user||!user.name||success||userInfo._id!==user._id){/* (userInfo._id !== user._id) BECAUSE DURING USER EDIT STATE CHANGES SO WE WANT TO FIRE DISPATCH AGAIN HERE IF THE DATA ISN'T SAME AS THE USER AS WE ARE LOGGED IN  */ // RESETTING PROFILE BEFORE FETCHING DATA SO THAT WE ALWAYS HAVE UPDATED DATA\ndispatch({type:USER_UPDATE_PROFILE_RESET});// FETCHING USER DATA\ndispatch(getUserDetails(\"profile\"));// FETCHING USER ORDER DETAILS\ndispatch(listMyOrders());}else{// WE HAVE THE USER INFO SO WE SET OUR STATE\nsetName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user,success]);/* HANDLERS */var submitHandler=function submitHandler(e){e.preventDefault();/* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */if(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{dispatch(updateUserProfile({id:user._id,name:name,email:email,password:password}));setMessage(\"\");}};return/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Profile\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),error&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}),loading&&/*#__PURE__*/_jsx(Loader,{}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"name\",placeholder:\"Enter Name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{required:true,type:\"email\",placeholder:\"Enter Email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter Password\",value:password,onChange:function onChange(e){return setpassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"passwordConfirm\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm Password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",className:\"mt-3\",children:\"Update\"})]})]}),/*#__PURE__*/_jsxs(Col,{md:9,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"My Orders\"}),loadingOrders?/*#__PURE__*/_jsx(Loader,{}):errorOrders?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorOrders}):/*#__PURE__*/_jsxs(Table,{striped:true,responsive:true,className:\"table-sm\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Date\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Paid\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Delivered\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:orders.map(function(order){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:order._id}),/*#__PURE__*/_jsx(\"td\",{children:order.createdAt?order.createdAt.substring(0,10):null}),/*#__PURE__*/_jsxs(\"td\",{children:[\"EGP\",order.totalPrice]}),/*#__PURE__*/_jsx(\"td\",{children:order.isPaid?order.paidAt?order.paidAt.substring(0,10):null:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\",style:{color:\"red\"}})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(LinkContainer,{to:\"/order/\".concat(order._id),children:/*#__PURE__*/_jsx(Button,{className:\"btn-sm\",children:\"Details\"})})})]},order._id);})})]})]})]});}export default ProfileScreen;","map":{"version":3,"sources":["G:/Fullstack Course/Final Project/frontend/src/screens/ProfileScreen.js"],"names":["React","useState","useEffect","Row","Col","Button","Form","Table","LinkContainer","Message","Loader","useDispatch","useSelector","getUserDetails","updateUserProfile","listMyOrders","USER_UPDATE_PROFILE_RESET","ProfileScreen","history","name","setName","email","setEmail","password","setpassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","user","loading","error","userLogin","userInfo","userUpdateProfle","success","orderListMy","loadingOrders","errorOrders","orders","push","_id","type","submitHandler","e","preventDefault","id","target","value","map","order","createdAt","substring","totalPrice","isPaid","paidAt","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n/* REACT BOOTSTRAP */\nimport { Row, Col, Button, Form, Table } from \"react-bootstrap\";\n\n/* REACT ROUTER BOOTSTRAP */\nimport { LinkContainer } from \"react-router-bootstrap\";\n\n/* COMPONENTS */\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\n\n/* REACT - REDUX */\nimport { useDispatch, useSelector } from \"react-redux\";\n\n/* ACTION CREATORS */\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\n\nimport { listMyOrders } from \"../actions/orderActions\";\n\n/* ACTION TYPES */\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nfunction ProfileScreen({ history }) {\n  /* STATE */\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const dispatch = useDispatch();\n\n  /* PULLING A PART OF STATE FROM THE ACTUAL STATE IN THE REDUX STORE */\n  const userDetails = useSelector((state) => state.userDetails);\n\n  const { user, loading, error } = userDetails;\n\n  /* WE NEED TO MAKE SURE USER IS LOGGED IN SO PULLING OUT USER LOGIN INFO */\n  const userLogin = useSelector((state) => state.userLogin);\n\n  const { userInfo } = userLogin;\n\n  /* PULLING OUT SUCCESS FROM userUpdateProfile, IF SUCCESS IS TRUE WE WILL RESET STATE */\n  const userUpdateProfle = useSelector((state) => state.userUpdateProfle);\n\n  const { success } = userUpdateProfle;\n\n  /* PULLING OUT USER ORDER DETAILS TO DISPLAY ON THE PAGE */\n  const orderListMy = useSelector((state) => state.orderListMy);\n\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\n\n  /* SENDING USER TO LOGIN PAGE IF NOT LOGGED IN & SHOW PROFILE DATA IF LOGGED IN */\n  useEffect(() => {\n    // USER IS NOT LOGGED IN\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      // WE DON'T HAVE THE USER INFO SO WE DISPATCH AN ACTION TO GET THE DATA\n      if (!user || !user.name || success || userInfo._id !== user._id) {\n        /* (userInfo._id !== user._id) BECAUSE DURING USER EDIT STATE CHANGES SO WE WANT TO FIRE DISPATCH AGAIN HERE IF THE DATA ISN'T SAME AS THE USER AS WE ARE LOGGED IN  */\n        // RESETTING PROFILE BEFORE FETCHING DATA SO THAT WE ALWAYS HAVE UPDATED DATA\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n\n        // FETCHING USER DATA\n        dispatch(getUserDetails(\"profile\"));\n\n        // FETCHING USER ORDER DETAILS\n        dispatch(listMyOrders());\n      } else {\n        // WE HAVE THE USER INFO SO WE SET OUR STATE\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  /* HANDLERS */\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    /* DISABLE SUBMIT IF PASSWORDS DON'T MATCH */\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(\n        updateUserProfile({\n          id: user._id,\n          name: name,\n          email: email,\n          password: password,\n        })\n      );\n      setMessage(\"\");\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n\n        {message && <Message variant=\"danger\">{message}</Message>}\n        {error && <Message variant=\"danger\">{error}</Message>}\n        {loading && <Loader />}\n\n        <Form onSubmit={submitHandler}>\n          <Form.Group controlId=\"name\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              required\n              type=\"name\"\n              placeholder=\"Enter Name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Label>Email Address</Form.Label>\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter Email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              value={password}\n              onChange={(e) => setpassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"passwordConfirm\">\n            <Form.Label>Confirm Password</Form.Label>\n            <Form.Control\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n            />\n          </Form.Group>\n\n          <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">\n            Update\n          </Button>\n        </Form>\n      </Col>\n\n      <Col md={9}>\n        <h2>My Orders</h2>\n\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant=\"danger\">{errorOrders}</Message>\n        ) : (\n          <Table striped responsive className=\"table-sm\">\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>Date</th>\n                <th>Total</th>\n                <th>Paid</th>\n                <th>Delivered</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>\n                    {order.createdAt ? order.createdAt.substring(0, 10) : null}\n                  </td>\n                  <td>EGP{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt ? (\n                        order.paidAt.substring(0, 10)\n                      ) : null\n                    ) : (\n                      <i className=\"fas fa-times\" style={{ color: \"red\" }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className=\"btn-sm\">Details</Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  );\n}\n\nexport default ProfileScreen;\n"]},"metadata":{},"sourceType":"module"}